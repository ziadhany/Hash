name: run tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb scrot
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --disable=C0201,C0114,C0115,C0116,W0611
    
    - name: Run the unittest
      run: |
        xvfb-run -a python test.py
        
    # Step 3: Clean up any stale X server lock files
    - name: Clean up old lock files
      run: |
        rm -f /tmp/.X99-lock

    # Step 4: Kill any existing Xvfb process and start a new one
    - name: Kill existing Xvfb process and start a new one
      run: |
        pkill Xvfb || true  # Ignore if Xvfb is not running
        export DISPLAY=:99
        Xvfb :99 -screen 0 1280x1024x24 &
        sleep 5  # Give some time for the Xvfb server to start

    # Step 5: Run the Python script that uses Tkinter or another GUI library
    - name: Run Python GUI script &  Take a screenshot
      run: |
        export DISPLAY=:99  # Ensure the correct display is set
        python main.py  & # Your GUI script that uses Tkinter or another GUI library
        scrot /tmp/screenshot.png
        
        # Kill the Python process after taking the screenshot
        pkill -f "python main.py"

    - name: Upload screenshot to GitHub Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: screenshot
        path: /tmp/screenshot.png
